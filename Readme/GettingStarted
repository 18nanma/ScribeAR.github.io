1. Cloning the repo
  - Once in VSCode, in the terminal of the application type "git clone " + the https link under the ScribeAR repo
    - Https link can be found by clicking the green "Code" button on the top right 
    
2. Get into the "ScribeAR.github.io" directory
  - You should now be able to access the code by cd-ing into the directory
    - If you are unsure where the "ScribeAR.github.io" folder is, you can type "ls" to see what you can currently cd into (it should be in 
      same same location you are currently in though). 
      - You should see "ScribeAR.github.io" as an option after typing "ls". type "cd ScribeAR.github.io" to be inside the repository.
      - If you don't see "ScribeAR.github.io", then you need to look for the folder within your computer. Out of the files/folders that
        are shown to you, cd into the folder that you think "ScribeAR.github.io" will be in by typing the command "cd " + the name of the folder. 
        Continue doing so until you've found "ScribeAR.github.io". If you need to go backwards to check other folders, type "cd ..".

3. Branch for each issue
  - Under the scribear/ScribeAR.github.io github page, there is the "Issues" tab. You can choose any of these issues to work on (easier issues 
    will likely be labeled as 'good first issue' but not all of them are labeled, so feel free to look at any of them!)
  - Once you've chosen what issue you want to work on, create a branch labeled "iss" + number of the issue (example: issue 27 would be names "iss27")
    - To create a branch and work in that branch, type "git checkout -b " + the issue title (look at example above for proper naming)
   
4. Edit the code! :)
  - Most of the code we are working with is in the src/components folder
  - To test your changes locally, type "npm start" and a local version of your code will open in your default browser. 
    - Chrome is best, so if you're having issues with other browsers, make sure to try Chrome

5. Pushing
  - Once you're done fixing the issue, you'll need to merge the two branches
    - Switch back to the master branch: "git checkout master"
    - Merge your issue branch to the master: "git merge " + issue name from before
    - Delete the previous branch: "git branch -d " + issue name
      - This closes the issue (also make sure to mark on the issues page that your issue number has been completed)
